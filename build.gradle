import static org.gradle.api.JavaVersion.VERSION_11
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext {
        artifactoryContextUrl = 'https://software.r3.com/artifactory'
        corda_release_group = 'net.corda'
        corda_release_version = '1.0.1620894007947-rc'
        corda_gradle_plugins_version = '6.0.0-BETA03'
        kotlin_version = '1.4.21'
        junit_version = '4.12'
        slf4j_version = '1.7.25'
        log4j_version = '2.11.2'
        corda_platform_version = '999' // FAKE - to be locked in later
        tokens_release_group = 'com.r3.corda.lib.tokens'
        tokens_sdk_version = '2.0-SNAPSHOT'
        confidential_id_release_group = "com.r3.corda.lib.ci"
        confidential_id_release_version = "2.0-SNAPSHOT"
        jfrogArtifactoryPluginVersion = '4.18.0'
    }

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "$artifactoryContextUrl/corda-dev" }
        maven { url "$artifactoryContextUrl/corda-releases" }
        maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "net.corda.plugins:cordapp-cpk:$corda_gradle_plugins_version"
    }
}

plugins {
    id "com.jfrog.artifactory" version "$jfrogArtifactoryPluginVersion"
}

allprojects {
    version "$confidential_id_release_version"
    group "$confidential_id_release_group"

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "$artifactoryContextUrl/corda-lib" }
        maven { url "$artifactoryContextUrl/corda-lib-dev" }
        maven { url "$artifactoryContextUrl/corda-releases" }
        maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }
        maven { url "$artifactoryContextUrl/corda-dependencies" }
        //needed for C5 binaries
        maven { url "$artifactoryContextUrl/corda-os-maven-unstable" }
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            allWarningsAsErrors = true
            languageVersion = "1.4"
            apiVersion = "1.4"
            jvmTarget = VERSION_11
            javaParameters = true   // Useful for reflection.
            freeCompilerArgs += [
                    "-Xjvm-default=all",
                    // Prevent Kotlin from warning about kotlin.* classes inside the OSGi bundle.
                    "-Xskip-runtime-version-check",
                    "-java-parameters"
            ]
        }
    }

    tasks.withType(Jar) {
        jar {
            // This makes the JAR's SHA-256 hash repeatable.
            preserveFileTimestamps = false
            reproducibleFileOrder = true
        }
    }
}

def publishProjects = [project(":ci-workflows")]

configure(publishProjects) { subproject ->
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    task sourceJar(type: Jar, dependsOn: subproject.classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: subproject.javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task install(dependsOn: 'publishToMavenLocal')

    publishing {
        publications {
            create(subproject.name, MavenPublication) {
                from components.java

                groupId subproject.group
                artifactId subproject.jar.baseName
                artifact tasks.sourceJar
                artifact tasks.javadocJar

                pom {
                    description = subproject.description
                }
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://software.r3.com/artifactory'
        repository {
            repoKey = 'corda-lib'
            username = System.getenv('CORDA_ARTIFACTORY_USERNAME') ?: System.getProperty('corda.artifactory.username')
            password = System.getenv('CORDA_ARTIFACTORY_PASSWORD') ?: System.getProperty('corda.artifactory.password')
        }

        defaults {
            if (publishProjects.contains(project)) {
                publications(project.name)
            }
        }
    }
}

wrapper {
    gradleVersion = "6.8.3"
    distributionType = Wrapper.DistributionType.ALL
}