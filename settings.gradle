pluginManagement {
    repositories {
        gradlePluginPortal()
        maven {
            url "$artifactoryContextUrl/corda-releases"
        }
        maven {
            url "$artifactoryContextUrl/corda-os-maven"
            credentials {
                username = settings.ext.find('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = settings.ext.find('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
    }

    plugins {
        id 'net.corda.plugins.cordapp-cpk' version corda_gradle_plugins_version
        id 'net.corda.plugins.cordapp-cpb' version corda_gradle_plugins_version
        id 'net.corda.plugins.quasar-utils' version corda_gradle_plugins_version
        id 'net.corda.cordapp.cordapp-configuration' version corda_release_version
        id 'org.jetbrains.kotlin.jvm' version kotlin_version
        id 'org.jetbrains.kotlin.plugin.noarg' version kotlin_version
        id 'org.jetbrains.kotlin.plugin.allopen' version kotlin_version
        id 'com.jfrog.artifactory' version jfrogArtifactoryPluginVersion
        id 'io.gitlab.arturbosch.detekt' version detektVersion
    }
}

include 'workflows'
project(":workflows").name = "ci-workflows"

// Test cordapps
include 'testing'
include 'testing:cordapps'
include 'testing:cordapps:confidential-exchange'
include 'testing:cordapps:confidential-exchange:contracts'
include 'testing:cordapps:confidential-exchange:workflows'

include 'testing:e2e'
